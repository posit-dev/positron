// Place your settings in this file to overwrite default and user settings.
{
    "files.exclude": {
        "out": true, // set this to true to hide the "out" folder with the compiled JS files
        "dist": true,
        "**/*.pyc": true,
        ".nyc_output": true,
        "obj": true,
        "bin": true,
        "**/__pycache__": true,
        "**/node_modules": true,
        ".vscode-test": false,
        ".vscode test": false,
        "**/.mypy_cache/**": true
    },
    "search.exclude": {
        "out": true, // set this to false to include "out" folder in search results
        "dist": true,
        "**/node_modules": true,
        "coverage": true,
        "languageServer*/**": true,
        ".vscode-test": true,
        ".vscode test": true
    },
    "[python]": {
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
            "source.organizeImports": "explicit"
        },
        "editor.defaultFormatter": "charliermarsh.ruff",
    },
    "[rust]": {
        "editor.defaultFormatter": "rust-lang.rust-analyzer",
        "editor.formatOnSave": true
    },
    "[typescript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.formatOnSave": true
    },
    "[javascript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.formatOnSave": true
    },
    "[JSON]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.formatOnSave": true
    },
    "[YAML]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.formatOnSave": true
    },
    "typescript.tsdk": "./node_modules/typescript/lib", // we want to use the TS server from our node_modules folder to control its version
    "typescript.preferences.quoteStyle": "single",
    "javascript.preferences.quoteStyle": "single",
    "prettier.printWidth": 120,
    "prettier.singleQuote": true,
    "editor.codeActionsOnSave": {
        "source.fixAll.eslint": "explicit"
    },
    "editor.rulers": [
		100
	],
    "python.languageServer": "Jedi",
    "flake8.args": ["--max-line-length=100", "--ignore=E203"],
    "cucumberautocomplete.skipDocStringsFormat": true,
    "typescript.preferences.importModuleSpecifier": "relative",
    // Branch name suggestion.
    "git.branchProtectionPrompt": "alwaysCommitToNewBranch",
    "git.branchRandomName.enable": true,
    "git.branchProtection": ["main", "release/*"],
    "git.pullBeforeCheckout": true,
    // Open merge editor for resolving conflicts.
    "git.mergeEditor": true,
    "python.testing.pytestArgs": [
        "python_files/tests",
         // --- Start Positron ---
         "python_files/positron/positron_ipykernel"
         // --- End Positron ---
    ],
    "python.testing.unittestEnabled": false,
    "python.testing.pytestEnabled": true,
    "rust-analyzer.linkedProjects": [
        ".\\python-env-tools\\Cargo.toml"
    ]
}
