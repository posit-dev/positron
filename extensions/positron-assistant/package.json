{
  "name": "positron-assistant",
  "displayName": "%displayName%",
  "description": "%description%",
  "version": "0.0.1",
  "publisher": "positron",
  "engines": {
    "vscode": "^1.65.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "enabledApiProposals": [
    "codeActionAI",
    "defaultChatParticipant",
    "findFiles2",
    "inlineCompletionsAdditions",
    "languageModelDataPart"
  ],
  "contributes": {
    "chatParticipants": [
      {
        "id": "positron.assistant.chat",
        "name": "assistant",
        "fullName": "%chatParticipants.fullName%",
        "description": "%chatParticipants.ask.description%",
        "isSticky": false,
        "isDefault": true,
        "commands": [
          {
            "name": "exportQuarto",
            "description": "%chatParticipants.commands.exportQuarto.description%"
          }
        ],
        "locations": [
          "panel"
        ],
        "modes": [
          "ask"
        ]
      },
      {
        "id": "positron.assistant.agent",
        "name": "assistant",
        "fullName": "%chatParticipants.fullName%",
        "description": "%chatParticipants.agent.description%",
        "isDefault": true,
        "locations": [
          "panel"
        ],
        "modes": [
          "agent"
        ]
      },
      {
        "id": "positron.assistant.terminal",
        "name": "assistant",
        "fullName": "%chatParticipants.fullName%",
        "description": "%chatParticipants.ask.description%",
        "isSticky": false,
        "isDefault": true,
        "locations": [
          "terminal"
        ]
      },
      {
        "id": "positron.assistant.editor",
        "name": "assistant",
        "fullName": "%chatParticipants.fullName%",
        "description": "%chatParticipants.ask.description%",
        "isSticky": false,
        "isDefault": true,
        "locations": [
          "editor"
        ]
      },
      {
        "id": "positron.assistant.notebook",
        "name": "assistant",
        "fullName": "%chatParticipants.fullName%",
        "description": "%chatParticipants.ask.description%",
        "isSticky": false,
        "isDefault": true,
        "locations": [
          "notebook"
        ]
      },
      {
        "id": "positron.assistant.editingSessionEditor",
        "name": "assistant",
        "fullName": "%chatParticipants.fullName%",
        "description": "%chatParticipants.edit.description%",
        "isSticky": false,
        "isDefault": true,
        "locations": [
          "panel"
        ],
        "modes": [
          "edit"
        ]
      }
    ],
    "menus": {
      "scm/inputBox": [
        {
          "command": "positron-assistant.generateCommitMessage",
          "group": "navigation",
          "when": "!positron-assistant.generatingCommitMessage && config.positron.assistant.gitIntegration.enable"
        },
        {
          "command": "positron-assistant.cancelGenerateCommitMessage",
          "group": "navigation",
          "when": "positron-assistant.generatingCommitMessage && config.positron.assistant.gitIntegration.enable"
        }
      ]
    },
    "commands": [
      {
        "command": "positron-assistant.exportChatToFileInWorkspace",
        "title": "%commands.exportChatToFileInWorkspace.title%",
        "category": "%commands.category%",
        "enablement": "config.positron.assistant.enable && workspaceFolderCount != 0"
      },
      {
        "command": "positron-assistant.exportChatTo",
        "title": "%commands.exportChatTo.title%",
        "category": "%commands.category%",
        "enablement": "config.positron.assistant.enable"
      },
      {
        "command": "positron-assistant.configureModels",
        "title": "%commands.configureModels.title%",
        "category": "%commands.category%",
        "enablement": "config.positron.assistant.enable"
      },
      {
        "command": "positron-assistant.logStoredModels",
        "title": "%commands.logStoredModels.title%",
        "category": "%commands.category%",
        "enablement": "config.positron.assistant.enable"
      },
      {
        "command": "positron-assistant.generateCommitMessage",
        "title": "%commands.generateCommitMessage.title%",
        "category": "%commands.category%",
        "enablement": "config.positron.assistant.enable && config.positron.assistant.gitIntegration.enable",
        "icon": "$(sparkle)"
      },
      {
        "command": "positron-assistant.cancelGenerateCommitMessage",
        "title": "%commands.cancelGenerateCommitMessage.title%",
        "category": "%commands.category%",
        "enablement": "config.positron.assistant.enable && config.positron.assistant.gitIntegration.enable",
        "icon": "$(stop)"
      }
    ],
    "configuration": [
      {
        "type": "object",
        "title": "%configuration.title%",
        "properties": {
          "positron.assistant.enable": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "%configuration.enable.markdownDescription%",
            "tags": ["preview"]
          },
          "positron.assistant.toolDetails.enable": {
            "type": "boolean",
            "default": false,
            "description": "%configuration.toolDetails.enable%"
          },
          "positron.assistant.useAnthropicSdk": {
            "type": "boolean",
            "default": true,
            "description": "%configuration.useAnthropicSdk.description%"
          },
          "positron.assistant.streamingEdits.enable": {
            "type": "boolean",
            "default": true,
            "description": "%configuration.streamingEdits.enable%"
          },
          "positron.assistant.inlineCompletionExcludes": {
            "type": "array",
            "default": ["**/.*"],
            "markdownDescription": "%configuration.inlineCompletionExcludes.description%",
            "items": {
              "type": "string"
            }
          },
          "positron.assistant.gitIntegration.enable": {
            "type": "boolean",
            "default": false,
            "description": "%configuration.gitIntegration.description%",
            "tags": ["experimental"]
          },
          "positron.assistant.getTableSummary.enable": {
            "type": "boolean",
            "default": false,
            "description": "%configuration.getTableSummary.description%",
            "tags": ["experimental"]
          },
          "positron.assistant.showTokenUsage.enable": {
            "type": "boolean",
            "default": false,
            "description": "%configuration.showTokenUsage.description%"
          }
        }
      }
    ],
    "languageModels": [
      {
        "vendor": "positron"
      }
    ],
    "languageModelTools": [
      {
        "name": "documentEdit",
        "displayName": "Edit Document",
        "modelDescription": "Output an edited version of the document.",
        "canBeReferencedInPrompt": false,
        "tags": [
          "positron-assistant"
        ],
        "inputSchema": {
          "type": "object",
          "properties": {
            "deltas": {
              "type": "array",
              "description": "The array of changes to apply.",
              "items": {
                "type": "object",
                "properties": {
                  "delete": {
                    "type": "string",
                    "description": "Text to delete from the document."
                  },
                  "replace": {
                    "type": "string",
                    "description": "Text to replace the deleted text with."
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "documentCreate",
        "displayName": "Create Document",
        "modelDescription": "Create a new document in the workspace.",
        "canBeReferencedInPrompt": false,
        "tags": [
          "positron-assistant",
          "requires-workspace"
        ],
        "inputSchema": {
          "type": "object",
          "properties": {
            "filePath": {
              "type": "string",
              "description": "The path to the document to create, including the file name and extension. This path must be relative to the workspace folder."
            },
            "workspaceFolder": {
              "type": "string",
              "description": "The workspace folder to create the document in. If not specified, the document will be created in the first workspace folder."
            },
            "content": {
              "type": "string",
              "description": "The initial content of the document. If not specified, the document will be created empty."
            },
            "errorIfExists": {
              "type": "boolean",
              "description": "Whether to throw an error if the document already exists. If false, the existing document will be opened instead.",
              "default": true
            }
          }
        }
      },
      {
        "name": "selectionEdit",
        "displayName": "Edit Selection",
        "modelDescription": "Output an edited version of the selected text.",
        "canBeReferencedInPrompt": false,
        "tags": [
          "positron-assistant"
        ],
        "inputSchema": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "The entire edited code selection."
            }
          }
        }
      },
      {
        "name": "executeCode",
        "displayName": "Execute Code",
        "modelDescription": "Execute a piece of code in the specified programming language. Only use this tool if you absolutely need to execute code, otherwise reply directly to the user with markdown code snippets.",
        "canBeReferencedInPrompt": false,
        "inputSchema": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "The code to execute."
            },
            "language": {
              "type": "string",
              "description": "The programming language of the code."
            },
            "summary": {
              "type": "string",
              "description": "A very short summary of the task the code is performing, beginning with a verb and not to exceed 7 words. Shown to the user to help them understand what the code will do."
            }
          }
        },
        "tags": [
          "positron-assistant",
          "requires-session"
        ]
      },
      {
        "name": "inspectVariables",
        "displayName": "Inspect Variables",
        "modelDescription": "List the children of an array of variables in a session. For example, the columns in a dataframe, items in a column or array, or elements of a list. If `accessKeys` is empty, lists all root-level variables in the session.\n\nIf the user references a variable by name, first determine the `access_key` from the user context or a previous inspect variables result.",
        "canBeReferencedInPrompt": false,
        "inputSchema": {
          "type": "object",
          "properties": {
            "sessionIdentifier": {
              "type": "string",
              "description": "The identifier of the session to inspect."
            },
            "accessKeys": {
              "type": "array",
              "description": "An array of variables to inspect.",
              "items": {
                "type": "array",
                "description": "A list of access keys that identify a variable by specifying its path.",
                "items": {
                  "type": "string",
                  "description": "An access key that uniquely identifies a variable among its siblings."
                }
              }
            }
          },
          "required": [
            "sessionIdentifier",
            "accessKeys"
          ]
        },
        "tags": [
          "positron-assistant",
          "requires-session"
        ]
      },
      {
        "name": "getPlot",
        "displayName": "View active plot",
        "modelDescription": "View the current active plot if one exists. Don't invoke this tool if there are no plots in the session.",
        "canBeReferencedInPrompt": false,
        "tags": [
          "positron-assistant",
          "requires-session"
        ]
      },
      {
        "name": "getTableSummary",
        "displayName": "Get Table Summary",
        "modelDescription": "Get structured information about table variables in the current session.",
        "inputSchema": {
          "type": "object",
          "properties": {
            "sessionIdentifier": {
              "type": "string",
              "description": "The identifier of the session that contains the tables."
            },
            "accessKeys": {
              "type": "array",
              "description": "An array of table variables to summarize.",
              "items": {
                "type": "array",
                "description": "A list of access keys that identify a variable by specifying its path.",
                "items": {
                  "type": "string",
                  "description": "An access key that uniquely identifies a variable among its siblings."
                }
              }
            }
          },
          "required": [
            "sessionIdentifier",
            "accessKeys"
          ]
        },
        "tags": [
          "positron-assistant",
          "requires-session"
        ],
        "when": "config.positron.assistant.getTableSummary.enable"
      },
      {
        "name": "getProjectTree",
        "displayName": "Get Project Tree",
        "modelDescription": "Get the project tree of the current workspace as a JSON object. This is useful for understanding the structure of the project and finding files and folders. Empty folders are not included in the tree.",
        "canBeReferencedInPrompt": false,
        "tags": [
          "positron-assistant",
          "requires-workspace"
        ],
        "inputSchema": {
          "type": "object",
          "properties": {
            "include": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "A Glob pattern to include in the project tree. Only the files and folders matching these patterns will be considered. If files are also matched by the `excludes` patterns, they will be filtered out."
              },
              "description": "Glob patterns to include in the project tree. By default, all files and folders in the workspace will be considered.",
              "default": [
                "**/*"
              ]
            },
            "exclude": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "A Glob pattern to exclude from the project tree. Files and folders matching these patterns will be filtered out, even if they match an included Glob."
              },
              "description": "Glob patterns to exclude from the project tree. These patterns will be applied in addition to the default excludes. By default, directories for dependencies, build artifacts, and other commonly ignored files are excluded, such as `.venv`, `venv`, `renv`, `node_modules`."
            },
            "replaceDefaultExcludes": {
              "type": "boolean",
              "description": "Whether to replace the default excludes with the provided `exclude` patterns. If false, the provided `exclude` patterns will be added to the default excludes.",
              "default": false
            },
            "excludeSettings": {
              "type": "string",
              "description": "Which exclude settings to consult when filtering the project tree. Options are: filesExclude or searchAndFilesExclude, or an empty string for no exclude settings.",
              "default": "searchAndFilesExclude"
            },
            "ignoreFiles": {
              "type": "boolean",
              "description": "Whether to ignore files that are listed in the `.gitignore` file or other ignore files.",
              "default": true
            },
            "filterResults": {
              "type": "boolean",
              "description": "Whether to filter results using excludes and ignore files. If false, none of the excludes or ignores will be applied, and only the `include` patterns will be considered. Use this setting when providing specific includes to locate particular files and folders.",
              "default": true
            },
            "maxFiles": {
              "type": "number",
              "description": "The maximum number of files to include in the project tree. If this limit is reached, a compressed description of the project will be provided instead.",
              "default": 500
            }
          }
        }
      },
      {
        "name": "getChangedFiles",
        "displayName": "Get changed files",
        "modelDescription": "Get summaries and git diffs for current changes to files in this workspace.",
        "canBeReferencedInPrompt": true,
        "userDescription": "Get changed files",
        "toolReferenceName": "changes",
        "when": "config.positron.assistant.gitIntegration.enable",
        "icon": "$(diff)",
        "tags": [
          "positron-assistant"
        ]
      },
      {
        "name": "installPythonPackage",
        "displayName": "Install Python Package",
        "modelDescription": "Install Python packages using pip. Provide an array of package names to install.",
        "canBeReferencedInPrompt": false,
        "tags": [
          "positron-assistant"
        ],
        "inputSchema": {
          "type": "object",
          "properties": {
            "packages": {
              "type": "array",
              "description": "Array of Python package names to install.",
              "items": {
                "type": "string",
                "description": "Name of the Python package to install."
              }
            }
          }
        }
      }
    ]
  },
  "scripts": {
    "compile": "gulp compile-extension:positron-assistant",
    "vscode:prepublish": "npm run compile",
    "pretest": "npm run compile",
    "install-copilot-language-server": "ts-node scripts/install-copilot-language-server.ts",
    "postinstall": "ts-node scripts/post-install.ts"
  },
  "devDependencies": {
    "@ai-sdk/amazon-bedrock": "^1.1.6",
    "@ai-sdk/anthropic": "^1.0.5",
    "@ai-sdk/azure": "^1.1.9",
    "@ai-sdk/google": "^1.1.17",
    "@ai-sdk/google-vertex": "^2.1.8",
    "@ai-sdk/mistral": "^1.1.6",
    "@ai-sdk/openai": "^1.0.8",
    "@aws-sdk/credential-providers": "^3.734.0",
    "@eslint/js": "^9.13.0",
    "@openrouter/ai-sdk-provider": "^0.0.6",
    "@stylistic/eslint-plugin": "^2.9.0",
    "@types/mocha": "^9.1.0",
    "@types/node": "^20",
    "@types/sinon": "^17.0.3",
    "ai": "^4.1.46",
    "eslint": "^9.13.0",
    "google-auth-library": "^9.15.1",
    "mocha": "^9.2.1",
    "ollama-ai-provider": "^1.1.0",
    "sinon": "^17.0.1",
    "ts-node": "^10.9.2",
    "typescript": "^5.6.2",
    "typescript-eslint": "^8.11.0",
    "zod": "^3.24.1"
  },
  "dependencies": {
    "@anthropic-ai/sdk": "^0.39.0",
    "@github/copilot-language-server": "^1.335.0",
    "vscode-languageclient": "^9.0.1"
  }
}
