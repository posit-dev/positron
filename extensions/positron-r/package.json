{
  "name": "positron-r",
  "displayName": "%displayName%",
  "description": "%description%",
  "version": "0.0.2",
  "publisher": "vscode",
  "engines": {
    "vscode": "^1.65.0"
  },
  "categories": [
    "Programming Languages"
  ],
  "main": "./out/extension.js",
  "capabilities": {
    "untrustedWorkspaces": {
      "supported": "limited",
      "description": "%r.capabilities.untrustedWorkspaces.description%"
    }
  },
  "activationEvents": [
    "onStartupFinished"
  ],
  "contributes": {
    "commands": [
      {
        "command": "r.createNewFile",
        "category": "R",
        "title": "%r.command.createNewFile.title%",
        "shortTitle": "%r.menu.createNewFile.title%"
      },
      {
        "command": "r.insertPipe",
        "category": "R",
        "title": "%r.command.insertPipe.title%",
        "shortTitle": "%r.menu.insertPipe.title%",
        "enablement": "editorTextFocus"
      },
      {
        "command": "r.insertPipeConsole",
        "category": "R",
        "title": "%r.command.insertPipe.title%",
        "shortTitle": "%r.menu.insertPipe.title%",
        "enablement": "positronConsoleFocused"
      },
      {
        "command": "r.insertLeftAssignment",
        "category": "R",
        "title": "%r.command.insertLeftAssignment.title%",
        "shortTitle": "%r.menu.insertLeftAssignment.title%",
        "enablement": "editorTextFocus"
      },
      {
        "command": "r.insertLeftAssignmentConsole",
        "category": "R",
        "title": "%r.command.insertLeftAssignment.title%",
        "shortTitle": "%r.menu.insertLeftAssignment.title%",
        "enablement": "positronConsoleFocused"
      },
      {
        "command": "r.insertSection",
        "category": "R",
        "title": "%r.command.insertSection.title%",
        "shortTitle": "%r.menu.insertSection.title%",
        "enablement": "editorLangId == r"
      },
      {
        "command": "r.packageLoad",
        "category": "R",
        "title": "%r.command.packageLoad.title%",
        "shortTitle": "%r.menu.packageLoad.title%"
      },
      {
        "command": "r.packageBuild",
        "category": "R",
        "title": "%r.command.packageBuild.title%",
        "shortTitle": "%r.menu.packageBuild.title%"
      },
      {
        "command": "r.packageInstall",
        "category": "R",
        "title": "%r.command.packageInstall.title%",
        "shortTitle": "%r.menu.packageInstall.title%"
      },
      {
        "command": "r.packageTest",
        "category": "R",
        "title": "%r.command.packageTest.title%",
        "shortTitle": "%r.menu.packageTest.title%"
      },
      {
        "command": "r.useTestthat",
        "category": "R",
        "title": "%r.command.useTestthat.title%"
      },
      {
        "command": "r.useTest",
        "category": "R",
        "title": "%r.command.useTest.title%"
      },
      {
        "command": "r.packageCheck",
        "category": "R",
        "title": "%r.command.packageCheck.title%",
        "shortTitle": "%r.menu.packageCheck.title%"
      },
      {
        "command": "r.packageDocument",
        "category": "R",
        "title": "%r.command.packageDocument.title%",
        "shortTitle": "%r.menu.packageDocument.title%"
      },
      {
        "command": "r.selectInterpreter",
        "category": "R",
        "title": "%r.command.selectInterpreter.title%"
      },
      {
        "command": "r.sourceCurrentFile",
        "category": "R",
        "title": "%r.command.sourceCurrentFile.title%",
        "icon": "$(play)"
      },
      {
        "command": "r.rmarkdownRender",
        "category": "R",
        "title": "%r.command.rmarkdownRender.title%",
        "icon": "$(play)"
      }
    ],
    "configuration": [
      {
        "type": "object",
        "title": "%r.configuration.title%",
        "properties": {
          "positron.r.testing": {
            "type": "boolean",
            "default": true,
            "description": "%r.configuration.packageTesting.description%"
          },
          "positron.r.restoreWorkspace": {
            "scope": "window",
            "type": "boolean",
            "default": false,
            "description": "%r.configuration.restoreWorkspace.description%"
          },
          "positron.r.extraArguments": {
            "scope": "window",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "%r.configuration.extraArguments.description%"
          },
          "positron.r.quietMode": {
            "scope": "window",
            "type": "boolean",
            "default": false,
            "description": "%r.configuration.quietMode.description%"
          },
          "positron.r.pipe": {
            "type": "string",
            "default": "%r.configuration.pipe.native.token%",
            "enum": [
              "%r.configuration.pipe.native.token%",
              "%r.configuration.pipe.magrittr.token%"
            ],
            "enumDescriptions": [
              "%r.configuration.pipe.native.description%",
              "%r.configuration.pipe.magrittr.description%"
            ],
            "description": "%r.configuration.pipe%"
          },
          "positron.r.diagnostics.enable": {
            "type": "boolean",
            "default": true,
            "description": "%r.configuration.diagnostics.enable.description%"
          }
        }
      },
      {
        "type": "object",
        "title": "%r.configuration.title-dev%",
        "properties": {
          "positron.r.kernel.path": {
            "scope": "window",
            "type": "string",
            "default": "",
            "description": "%r.configuration.kernelPath.description%"
          },
          "positron.r.kernel.logLevel": {
            "scope": "window",
            "type": "string",
            "enum": [
              "error",
              "warn",
              "info",
              "debug",
              "trace"
            ],
            "enumDescriptions": [
              "%r.configuration.logLevel.error.description%",
              "%r.configuration.logLevel.warn.description%",
              "%r.configuration.logLevel.info.description%",
              "%r.configuration.logLevel.debug.description%",
              "%r.configuration.logLevel.trace.description%"
            ],
            "default": "warn",
            "description": "%r.configuration.logLevel.description%"
          },
          "positron.r.kernel.logLevelExternal": {
            "scope": "window",
            "type": "string",
            "default": "warn",
            "title": "%r.configuration.logLevelExternal.title%",
            "description": "%r.configuration.logLevelExternal.description%"
          },
          "positron.r.kernel.profile": {
            "scope": "window",
            "type": "string",
            "default": null,
            "description": "%r.configuration.profile.description%"
          },
          "positron.r.kernel.env": {
            "scope": "window",
            "type": "object",
            "default": {},
            "description": "%r.configuration.env.description%"
          },
          "positron.r.trace.server": {
            "scope": "window",
            "type": "string",
            "enum": [
              "off",
              "messages",
              "verbose"
            ],
            "enumDescriptions": [
              "%r.configuration.tracing.off.description%",
              "%r.configuration.tracing.messages.description%",
              "%r.configuration.tracing.verbose.description%"
            ],
            "default": "off",
            "description": "%r.configuration.tracing.description%"
          },
          "positron.r.extraArguments": {
            "scope": "window",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "%r.configuration.extraArguments.description%"
          }
        }
      }
    ],
    "configurationDefaults": {
      "[r]": {
        "editor.formatOnType": true,
        "editor.tabSize": 2,
        "editor.wordSeparators": "`~!@#$%^&*()-=+[{]}\\|;:'\",<>/?",
        "editor.smartSelect.selectLeadingAndTrailingWhitespace": false
      }
    },
    "languages": [
      {
        "id": "r",
        "extensions": [
          ".R",
          ".r",
          ".rprofile"
        ],
        "aliases": [
          "R",
          "r"
        ],
        "filenames": [
          "NAMESPACE"
        ],
        "configuration": "./language-configuration/r-language-configuration.json"
      },
      {
        "id": "debian-control-file",
        "extensions": [
          ".Rproj",
          ".dcf"
        ],
        "aliases": [
          "R DCF"
        ],
        "filenames": [
          "DESCRIPTION",
          ".lintr"
        ],
        "configuration": "./language-configuration/dcf-language-configuration.json"
      },
      {
        "id": "r-pkg-docs",
        "aliases": [
          "R documentation",
          "r documentation"
        ],
        "extensions": [
          ".rd",
          ".Rd"
        ],
        "configuration": "./language-configuration/r-docs-language-configuration.json"
      },
      {
        "id": "json",
        "aliases": [
          "renv lockfile"
        ],
        "filenames": [
          "renv.lock"
        ]
      }
    ],
    "grammars": [
      {
        "language": "r",
        "scopeName": "source.r",
        "path": "./syntaxes/r.tmGrammar.gen.json"
      },
      {
        "language": "debian-control-file",
        "scopeName": "source.dcf",
        "path": "./syntaxes/dcf.tmLanguage.json",
        "embeddedLanguages": {
          "meta.embedded.block.r": "r"
        }
      },
      {
        "language": "r-pkg-docs",
        "scopeName": "source.rdocs",
        "path": "./syntaxes/rd.tmLanguage.json"
      }
    ],
    "keybindings": [
      {
        "command": "r.insertPipe",
        "key": "ctrl+shift+m",
        "mac": "cmd+shift+m",
        "when": "editorLangId == r"
      },
      {
        "command": "r.insertPipeConsole",
        "key": "ctrl+shift+m",
        "mac": "cmd+shift+m",
        "when": "editorLangId == r"
      },
      {
        "command": "r.insertLeftAssignment",
        "key": "alt+-",
        "mac": "alt+-",
        "when": "editorLangId == r"
      },
      {
        "command": "r.insertLeftAssignmentConsole",
        "key": "alt+-",
        "mac": "alt+-",
        "when": "editorLangId == r"
      },
      {
        "command": "r.packageLoad",
        "key": "ctrl+shift+l",
        "mac": "cmd+shift+l",
        "when": "isRPackage"
      },
      {
        "command": "r.packageInstall",
        "key": "ctrl+shift+b",
        "mac": "cmd+shift+b",
        "when": "isRPackage"
      },
      {
        "command": "r.packageTest",
        "key": "ctrl+shift+t",
        "mac": "cmd+shift+t",
        "when": "isRPackage"
      },
      {
        "command": "r.packageCheck",
        "key": "ctrl+shift+e",
        "mac": "cmd+shift+e",
        "when": "isRPackage"
      },
      {
        "command": "r.packageDocument",
        "key": "ctrl+shift+d",
        "mac": "cmd+shift+d",
        "when": "isRPackage"
      },
      {
        "command": "r.sourceCurrentFile",
        "key": "ctrl+shift+enter",
        "mac": "cmd+shift+enter",
        "when": "editorLangId == r"
      },
      {
        "command": "r.insertSection",
        "key": "ctrl+k h",
        "mac": "cmd+k h",
        "when": "editorLangId == r"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "category": "R",
          "command": "r.sourceCurrentFile",
          "icon": "$(play)",
          "title": "%r.command.sourceCurrentFile.title%",
          "when": "editorLangId == r"
        },
        {
          "category": "R",
          "command": "r.rmarkdownRender",
          "icon": "$(play)",
          "title": "%r.command.rmarkdownRender.title%",
          "when": "resourceExtname == '.rmd' || resourceExtname == '.Rmd'"
        },
        {
          "category": "R",
          "command": "r.insertPipe",
          "when": "editorLangId == r"
        },
        {
          "category": "R",
          "command": "r.insertPipeConsole",
          "when": "editorLangId == r"
        },
        {
          "category": "R",
          "command": "r.insertLeftAssignment",
          "when": "editorLangId == r"
        },
        {
          "category": "R",
          "command": "r.insertLeftAssignmentConsole",
          "when": "editorLangId == r"
        },
        {
          "category": "R",
          "command": "r.insertSection",
          "when": "editorLangId == r"
        },
        {
          "category": "R",
          "command": "r.packageLoad",
          "when": "isRPackage"
        },
        {
          "category": "R",
          "command": "r.packageBuild",
          "when": "isRPackage"
        },
        {
          "category": "R",
          "command": "r.packageInstall",
          "when": "isRPackage"
        },
        {
          "category": "R",
          "command": "r.packageTest",
          "when": "isRPackage"
        },
        {
          "category": "R",
          "command": "r.packageCheck",
          "when": "isRPackage"
        }
      ],
      "file/newFile": [
        {
          "command": "r.createNewFile",
          "group": "file",
          "when": "!virtualWorkspace"
        }
      ],
      "editor/context": [
        {
          "command": "r.sourceCurrentFile",
          "group": "R",
          "title": "%r.command.sourceCurrentFile.title%",
          "when": "editorLangId == r"
        },
        {
          "command": "r.rmarkdownRender",
          "group": "R",
          "title": "%r.command.rmarkdownRender.title%",
          "when": "resourceExtname == '.rmd' || resourceExtname == '.Rmd'"
        }
      ],
      "editor/title/run": [
        {
          "command": "r.sourceCurrentFile",
          "group": "navigation@0",
          "icon": "$(play)",
          "title": "%r.command.sourceCurrentFile.title%",
          "when": "resourceLangId == r && !isInDiffEditor"
        },
        {
          "command": "r.rmarkdownRender",
          "icon": "$(play)",
          "title": "%r.command.rmarkdownRender.title%",
          "when": "(resourceExtname == '.rmd' || resourceExtname == '.Rmd') && !isInDiffEditor"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "testing",
        "contents": "Workspace does not appear to be an R package.",
        "when": "!isRPackage"
      },
      {
        "view": "testing",
        "contents": "R tests can appear here if the package uses testthat and the setting Positron > R: Testing is set to 'true'.\n[Adjust this setting](command:workbench.action.openSettings?\"positron.r.testing\")",
        "when": "isRPackage && !config.positron.r.testing"
      },
      {
        "view": "testing",
        "contents": "Package does not appear to use testthat.\n[Configure testhat for R](command:r.useTestthat)",
        "when": "isRPackage && config.positron.r.testing && !testthatIsConfigured"
      },
      {
        "view": "testing",
        "contents": "No testthat tests found.\n[Add a test](command:r.useTest)",
        "when": "isRPackage && config.positron.r.testing && testthatIsConfigured && !testthatHasTests"
      }
    ],
    "taskDefinitions": [
      {
        "type": "rPackageTask",
        "when": "isRPackage"
      }
    ],
    "debuggers": [
      {
        "type": "ark",
        "label": "R Debugger"
      }
    ],
    "notebookRenderer": [
      {
        "id": "positron.r.htmlwidget",
        "displayName": "R HTML Widget",
        "mimeTypes": [
          "application/vnd.r.htmlwidget"
        ],
        "entrypoint": "resources/js/htmlwidget.js"
      }
    ],
    "languageRuntimes": [
      {
        "languageId": "r"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "yarn run compile",
    "install-kernel": "ts-node scripts/install-kernel.ts",
    "compile-syntax": "ts-node scripts/compile-syntax.ts",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "yarn run compile && yarn run lint",
    "postinstall": "ts-node scripts/post-install.ts",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "extensionDependencies": [
    "vscode.jupyter-adapter"
  ],
  "devDependencies": {
    "@types/decompress": "^4.2.7",
    "@types/fs-extra": "^9.0.13",
    "@types/glob": "^7.2.0",
    "@types/mocha": "^9.1.0",
    "@types/node": "14.x",
    "@types/split2": "^4.2.2",
    "@types/which": "^3.0.0",
    "@typescript-eslint/eslint-plugin": "^5.12.1",
    "@typescript-eslint/parser": "^5.12.1",
    "@vscode/test-electron": "^2.1.2",
    "decompress": "^4.2.1",
    "eslint": "^8.9.0",
    "glob": "^7.2.0",
    "mocha": "^9.2.1",
    "ts-node": "^10.9.1",
    "typescript": "^4.5.5",
    "vsce": "^2.11.0"
  },
  "dependencies": {
    "fs-extra": "^10.0.1",
    "p-queue": "^6.6.2",
    "split2": "^4.2.0",
    "vscode-languageclient": "^9.0.1",
    "web-tree-sitter": "^0.20.8",
    "winreg": "^1.2.5"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/posit-dev/positron"
  },
  "positron": {
    "binaryDependencies": {
      "ark": "0.1.124"
    },
    "minimumRVersion": "4.2.0",
    "minimumRenvVersion": "1.0.7"
  }
}
