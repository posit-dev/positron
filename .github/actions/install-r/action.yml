name: "Setup Rig, R, and R Packages"
description: "Install a specified R version using Rig, with an option to install additional R packages."
inputs:
  version:
    description: "The R version to install (e.g., 4.4.0)"
    required: false
    default: "4.4.0"
  alternate_version:
    description: "The alternate R version to install (e.g., 4.4.2)"
    required: false
    default: "4.4.2"
  install_undetectable_interpreters:
    description: "Install undetectable interpreters"
    required: true
    type: boolean
runs:
  using: "composite"
  steps:
    - name: Install Rig and R
      shell: bash
      run: |
        R_VERSION="${{ inputs.version }}"
        echo "Installing R version $R_VERSION using Rig..."
        curl -Ls https://github.com/r-lib/rig/releases/download/latest/rig-linux-"$(arch)"-latest.tar.gz | sudo tar xz -C /usr/local
        rig add "$R_VERSION"

    - name: Configure Posit PPM for Ubuntu 24.04 with Custom HTTP User-Agent
      shell: bash
      run: |
        echo "Configuring R to use Posit Package Manager for Ubuntu 24.04..."
        cat <<EOF > ~/.Rprofile
        options(
          repos = c(RSPM = "https://packagemanager.posit.co/cran/__linux__/noble/latest"),
          HTTPUserAgent = sprintf(
            "R/%s (%s) R (%s)",
            getRversion(), "ubuntu-2404",
            paste(getRversion(), R.version\$platform, R.version\$arch, R.version\$os)
          )
        )
        EOF

    - name: Check R Installation
      shell: bash
      run: |
        R --version

    - name: Install R Packages
      shell: bash
      run: |
        echo "Installing R development packages..."
        curl -s https://raw.githubusercontent.com/posit-dev/qa-example-content/main/DESCRIPTION --output DESCRIPTION
        Rscript -e "if (!requireNamespace('pak', quietly = TRUE)) install.packages('pak', repos = 'https://cran.rstudio.com')"
        Rscript -e "options(pak.install_binary = TRUE); pak::local_install_dev_deps(ask = FALSE)"

    - name: Install alternate R version
      shell: bash
      run: |
        R_ALTERNATE_VERSION="${{ inputs.alternate_version }}"
        echo "Installing R version $R_ALTERNATE_VERSION using Rig..."
        rig add "$R_ALTERNATE_VERSION"

    - name: Install Prebuilt R 4.4.1 in ~/scratch (Ubuntu Only)
      if: ${{ inputs.install_undetectable_interpreters == 'true' }}
      shell: bash
      run: |
        echo "Installing R 4.4.1 in ~/scratch..."

        # Set installation path
        INSTALL_DIR="$HOME/scratch/R-4.4.1"
        mkdir -p $INSTALL_DIR

        # Download the correct R 4.4.1 package for Ubuntu
        DEB_URL="https://cloud.r-project.org/bin/linux/ubuntu/noble-cran40/r-base-core_4.4.1-3.2404.0_amd64.deb"
        curl -fLO "$DEB_URL"

        # Verify the file format before extracting
        if file r-base-core_4.4.1-3.2404.0_amd64.deb | grep -q "Debian binary package"; then
            echo "Valid Debian package detected."
        else
            echo "Error: Downloaded file is not a valid .deb package!"
            exit 1
        fi

        # Extract the .deb package manually (without sudo)
        dpkg-deb -x r-base-core_4.4.1-3.2404.0_amd64.deb $INSTALL_DIR

        # Set the correct path for R binary
        R_BIN="$INSTALL_DIR/usr/bin/R"

        # Fix R_HOME to match our extracted directory
        export R_HOME="$INSTALL_DIR/usr/lib/R"
        export PATH="$INSTALL_DIR/usr/bin:$PATH"

        # Verify R installation
        if [[ -x "$R_BIN" ]]; then
            echo "R successfully extracted."
            R_HOME="$INSTALL_DIR/usr/lib/R" $R_BIN --version
        else
            echo "Error: R binary not found in extracted directory."
            exit 1
        fi

        echo "Custom R installed at $INSTALL_DIR"

