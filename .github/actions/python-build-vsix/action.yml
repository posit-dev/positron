name: "Build VSIX"
description: "Build the extension's VSIX"

inputs:
  node_version:
    description: "Version of Node to install"
    required: true
  vsix_name:
    description: "Name to give the final VSIX"
    required: true
  artifact_name:
    description: "Name to give the artifact containing the VSIX"
    required: true
  cargo_target:
    description: "Cargo build target for the native build"
    required: true
  vsix_target:
    description: "vsix build target for the native build"
    required: true

runs:
  using: "composite"
  steps:
    - name: Install Node
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node_version }}
        cache: "npm"

    # Jedi LS depends on dataclasses which is not in the stdlib in Python 3.7.
    - name: Use Python 3.8 for JediLSP
      uses: actions/setup-python@v5
      with:
        python-version: 3.8
        cache: "pip"
        cache-dependency-path: |
          extensions/positron-python/requirements.txt
          extensions/positron-python/python_files/jedilsp_requirements/requirements.txt
    - name: Upgrade Pip
      run: python -m pip install -U pip
      shell: bash

    # For faster/better builds of sdists.
    - name: Install build pre-requisite
      run: python -m pip install wheel nox
      shell: bash

    - name: Install Python Extension dependencies (jedi, etc.)
      run: nox --noxfile extensions/positron-python/noxfile.py --session install_python_libs
      shell: bash

    - name: Run npm ci
      run: |
        cd extensions/positron-python
        npm ci --prefer-offline
      shell: bash

    - name: Update optional extension dependencies
      run: |
        cd extensions/positron-python
        npm run addExtensionPackDependencies
      shell: bash

    - name: Build Webpack
      run: |
        cd extensions/positron-python
        npx gulp clean
        npx gulp prePublishBundle
      shell: bash

    - name: Build VSIX
      run: |
        cd extensions/positron-python
        npx vsce package --target ${{ inputs.vsix_target }} --out positron-python-dev.vsix --pre-release
      shell: bash

    - name: Rename VSIX
      working-directory: extensions/positron-python
      # Move to a temp name in case the specified name happens to match the default name.
      run: |
        cp positron-python-dev.vsix positron-python-dev-temp.vsix && mv positron-python-dev-temp.vsix ${{ inputs.vsix_name }}
      shell: bash

    - name: Upload VSIX
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.artifact_name }}
        path: extensions/positron-python/${{ inputs.vsix_name }}
        if-no-files-found: error
        retention-days: 2
