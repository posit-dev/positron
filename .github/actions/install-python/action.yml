name: "Setup Python"
description: "Install Python dependencies and alternate version."
inputs:
  alternate_version:
    description: "The alternate version of Python to install (e.g., 3.13.0)"
    required: true
    default: "3.13.0"
  install_undetectable_interpreters:
    description: "Install undetectable interpreters"
    required: true
    type: boolean
runs:
  using: "composite"
  steps:
    - name: Install Python dependencies
      shell: bash
      run: |
        curl https://raw.githubusercontent.com/posit-dev/qa-example-content/main/requirements.txt --output requirements.txt
        python3 -m pip install --upgrade pip
        python3 -m pip install -r requirements.txt

    - name: Verify Python Version
      shell: bash
      run: |
        python3 --version
        which python

    - name: Install pyenv
      shell: bash
      run: |
        echo "Installing pyenv..."
        curl https://pyenv.run | bash

        # Add pyenv to PATH in bashrc (for later steps and tests)
        echo 'export PATH="$HOME/.pyenv/bin:$PATH"' >> ~/.bashrc
        echo 'eval "$(pyenv init --path)"' >> ~/.bashrc
        echo 'eval "$(pyenv virtualenv-init -)"' >> ~/.bashrc

        # Apply changes for the current session
        export PATH="$HOME/.pyenv/bin:$PATH"
        eval "$(pyenv init --path)"
        eval "$(pyenv virtualenv-init -)"

        # Verify installation
        pyenv --version

    - name: Install Alternate Python Version
      shell: bash
      run: |
        export PATH="$HOME/.pyenv/bin:$PATH"
        eval "$(pyenv init --path)"
        eval "$(pyenv virtualenv-init -)"

        PYTHON_ALTERNATE_VERSION="${{ inputs.alternate_version }}"
        echo "Installing Python version $PYTHON_ALTERNATE_VERSION using pyenv..."
        pyenv install -s "$PYTHON_ALTERNATE_VERSION"

        pyenv versions

        pyenv global "$PYTHON_ALTERNATE_VERSION"
        python --version
        python -m pip install --upgrade pip
        python -m pip install ipykernel

        # Undo the change and reset to system Python
        echo "Resetting pyenv to system Python..."
        pyenv global system

        # Verify that Python is reset
        python --version

    - name: Debug Install Undetectable Interpreters
      shell: bash
      run: |
        echo "install_undetectable_interpreters = '${{ inputs.install_undetectable_interpreters }}'"

    - name: Install Prebuilt Python 3.11.11 in ~/scratch
      if: ${{ inputs.install_undetectable_interpreters == true }}
      shell: bash
      run: |
        echo "Installing Python 3.11.11 in ~/scratch..."

        # Set installation path
        INSTALL_DIR="$HOME/scratch/python-custom"
        mkdir -p $INSTALL_DIR

        # Download official prebuilt Python binary
        curl -o python.tar.xz "https://www.python.org/ftp/python/3.11.11/Python-3.11.11.tar.xz"

        # Extract directly into the install directory
        tar -xf python.tar.xz --strip-components=1 -C $INSTALL_DIR

        # Ensure the Python binary is executable
        chmod +x $INSTALL_DIR/bin/python3 || true  # Ignore if already executable

        # Debug: Check the extracted files
        ls -lah $INSTALL_DIR/bin/

        # Verify installation
        if [[ -x "$INSTALL_DIR/bin/python3" ]]; then
            $INSTALL_DIR/bin/python3 --version
            $INSTALL_DIR/bin/python3 -m pip install --upgrade pip
            echo "Custom Python installed at $INSTALL_DIR"
        else
            echo "Error: Python binary not found in $INSTALL_DIR/bin/"
            exit 1
        fi


