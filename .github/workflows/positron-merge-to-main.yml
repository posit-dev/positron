name: "Positron: CI - Merge to main"

on:
  push:
    branches:
      - main
  workflow_call:
    inputs:
      smoketest_target:
        required: false
        description: "Smoketest suite to run, e.g. smoketest-merge-to-main or smoketest-pr"
        default: "smoketest-merge-to-main"
        type: string
  workflow_dispatch:
    inputs:
      smoketest_target:
        required: false
        description: "Smoketest suite to run, e.g. smoketest-merge-to-main or smoketest-pr"
        default: "smoketest-merge-to-main"
        type: string

env:
  SMOKETEST_TARGET: ${{ inputs.smoketest_target || 'smoketest-merge-to-main' }}

jobs:

  linux:
    name: Tests on Linux
    runs-on: ubuntu-latest
    timeout-minutes: 45
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      POSITRON_BUILD_NUMBER: 0 # CI skips building releases
    steps:
      - uses: actions/checkout@v4

      - name: Setup Build Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y vim curl build-essential clang make cmake git python3-pip python-is-python3 libsodium-dev libxkbfile-dev pkg-config libsecret-1-dev libxss1 dbus xvfb libgtk-3-0 libgbm1 libnss3 libnspr4 libasound2 libkrb5-dev libcairo-dev libsdl-pango-dev libjpeg-dev libgif-dev
          sudo cp build/azure-pipelines/linux/xvfb.init /etc/init.d/xvfb
          sudo chmod +x /etc/init.d/xvfb
          sudo update-rc.d xvfb defaults
          sudo service xvfb start

      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Execute yarn
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
          ELECTRON_SKIP_BINARY_DOWNLOAD: 1
          POSITRON_GITHUB_PAT: ${{ github.token }}
        run: |
          # Install Yarn
          npm install -g yarn

          # Install node-gyp; this is required by some packages, and yarn
          # sometimes fails to automatically install it.
          yarn global add node-gyp

          # Perform the main yarn command; this installs all Node packages and
          # dependencies
          yarn --immutable --network-timeout 120000
          yarn --cwd test/automation install
          yarn --cwd test/smoke install

      - name: Compile and Download
        run: yarn npm-run-all --max_old_space_size=4095 -lp compile "electron x64" playwright-install download-builtin-extensions

      - name: Compile Integration Tests
        run: yarn --cwd test/integration/browser compile

      - name: Compile Smoke Tests
        run: yarn --cwd test/smoke compile

      - name: Install rig, R, and R packages
        run: |
          curl -Ls https://github.com/r-lib/rig/releases/download/latest/rig-linux-"$(arch)"-latest.tar.gz | $(which sudo) tar xz -C /usr/local
          rig add 4.4.0
          curl https://raw.githubusercontent.com/posit-dev/qa-example-content/main/DESCRIPTION --output DESCRIPTION
          Rscript -e "pak::local_install_dev_deps(ask = FALSE)"

      - name: Setup Graphviz
        uses: ts-graphviz/setup-graphviz@v2.0.2

      - name: Install python dependencies
        run: |
          curl https://raw.githubusercontent.com/posit-dev/qa-example-content/main/requirements.txt --output requirements.txt
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install matplotlib ipykernel graphviz

      - name: Run Unit Tests (node.js)
        id: nodejs-unit-tests
        run: yarn test-node

      - name: Run Integration Tests (Electron)
        id: electron-integration-tests
        run: DISPLAY=:10 ./scripts/test-integration-pr.sh

      - name: Run Smoke Tests (Electron)
        env:
          POSITRON_PY_VER_SEL: 3.10.12
          POSITRON_R_VER_SEL: 4.4.0
        id: electron-smoke-tests
        run: DISPLAY=:10 yarn ${{ env.SMOKETEST_TARGET }} --tracing

      - name: Upload run artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: run-artifacts
          path: .build/logs/smoke-tests-electron/

      - name: slack-smoke-test-report
        if: failure()
        uses: testlabauto/xunit-slack-reporter@v2.0.1
        env:
          SLACK_CHANNEL: C07FR1JNZNJ #positron-test-results channel
          SLACK_TOKEN: ${{ secrets.SMOKE_TESTS_SLACK_TOKEN }}
          XUNIT_PATH: .build/logs/smoke-tests-electron/test-results/results.xml


