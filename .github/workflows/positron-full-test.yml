name: "Positron: Full Test Suite"

# Run tests daily at 4am UTC (11p EST) on weekdays for now, or manually
on:
  pull_request:
  schedule:
    - cron: "0 4 * * 1-5"
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  setup:
    runs-on: ubuntu-latest-8x
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      POSITRON_BUILD_NUMBER: 0 # CI skips building releases
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Cache node_modules, build, extensions, remote, etc
        uses: ./.github/actions/cache-multi-paths

      # - name: Setup Build Environment
      #   uses: ./.github/actions/setup-build-env

      - name: Install Build Environment Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y vim curl build-essential clang make cmake git python3-pip python-is-python3 libsodium-dev libxkbfile-dev pkg-config libsecret-1-dev libxss1 dbus xvfb libgtk-3-0 libgbm1 libnss3 libnspr4 libasound2 libkrb5-dev libcairo-dev libsdl-pango-dev libjpeg-dev libgif-dev pandoc
          sudo cp build/azure-pipelines/linux/xvfb.init /etc/init.d/xvfb
          sudo chmod +x /etc/init.d/xvfb
          sudo update-rc.d xvfb defaults
          sudo service xvfb start

      - name: Execute yarn
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
          ELECTRON_SKIP_BINARY_DOWNLOAD: 1
          POSITRON_GITHUB_PAT: ${{ github.token }}
        run: |
          corepack enable
          yarn --immutable --network-timeout 120000

      - name: Compile
        run: yarn npm-run-all --max_old_space_size=4095 -lp compile

      - name: Upload Compiled Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: compiled-app
          include-hidden-files: true
          path: ./out/vs

  unit-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: setup
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      POSITRON_BUILD_NUMBER: 0 # CI skips building releases
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Cache node_modules, build, extensions, remote, R deps, Python deps
        uses: ./.github/actions/cache-multi-paths

      - name: Setup Build Environment
        uses: ./.github/actions/setup-build-env

      - name: Download Compiled Artifacts
        uses: actions/download-artifact@v4
        with:
          name: compiled-app
          path: ./out/vs

      - name: Download Electron, Playwright, Built-in Extensions
        run: yarn npm-run-all --max_old_space_size=4095 -lp "electron x64" playwright-install download-builtin-extensions

      - name: Run Unit Tests (Electron)
        id: electron-unit-tests
        run: DISPLAY=:10 ./scripts/test.sh

      - name: Run Unit Tests (node.js)
        id: nodejs-unit-tests
        run: yarn test-node

      - name: Run Unit Tests (Browser, Chromium)
        id: browser-unit-tests
        run: DISPLAY=:10 yarn test-browser-no-install --browser chromium

  integration-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    needs: setup
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      POSITRON_BUILD_NUMBER: 0 # CI skips building releases
    steps:
      - uses: actions/checkout@v4

      - name: Cache node_modules, build, extensions, remote, R packages, Python dependencies
        uses: ./.github/actions/cache-multi-paths

      # - name: Install Positron License
      #   uses: ./.github/actions/install-license
      #   with:
      #     github-pat: ${{ secrets.POSITRON_GITHUB_PAT }}
      #     dev-license: ${{ secrets.POSITRON_DEV_LICENSE }}

      - name: Checkout test licensing tool
        run: |
          cd ..
          mkdir positron-license
          cd positron-license
          git clone https://${{ secrets.POSITRON_GITHUB_PAT }}@github.com/posit-dev/positron-license.git .
        env:
          GITHUB_TOKEN: ${{ secrets.POSITRON_GITHUB_PAT }}

      - name: Install Rust latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Build licensing tool
        run: |
          cd ..
          cd positron-license/pdol
          cargo build

      - name: Echo license
        run: |
          cd ..
          cd positron-license/pdol/target/debug
          echo "${{ secrets.POSITRON_DEV_LICENSE }}" > pdol_rsa
          chmod 600 pdol_rsa

      - name: Download Compiled Artifacts
        uses: actions/download-artifact@v4
        with:
          name: compiled-app
          path: ./out/vs

      - name: Download Electron, Playwright, Built-in Extensions
        run: yarn npm-run-all --max_old_space_size=4095 -lp "electron x64" playwright-install download-builtin-extensions

      - name: Setup Build Environment
        uses: ./.github/actions/setup-build-env

      - name: Execute yarn
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
          ELECTRON_SKIP_BINARY_DOWNLOAD: 1
          POSITRON_GITHUB_PAT: ${{ github.token }}
        run: |
          corepack enable
          yarn global add node-gyp
          yarn --immutable --network-timeout 120000

      - name: Download Electron, Playwright
        run: yarn npm-run-all --max_old_space_size=4095 -lp "electron x64" playwright-install

      - name: Compile Integration Tests
        run: yarn --cwd test/integration/browser compile

      - name: Run Integration Tests (Electron)
        id: electron-integration-tests
        run: DISPLAY=:10 ./scripts/test-integration.sh

      - name: Run Integration Tests (Remote)
        if: success() || failure()
        id: electron-remote-integration-tests
        run: DISPLAY=:10 ./scripts/test-remote-integration.sh

      - name: Run Integration Tests (Browser, Chromium)
        if: success() || failure()
        id: browser-integration-tests
        run: DISPLAY=:10 ./scripts/test-web-integration.sh --browser chromium

  e2e-electron-tests:
    runs-on: ubuntu-latest-8x
    timeout-minutes: 25
    needs: setup
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      POSITRON_BUILD_NUMBER: 0 # CI skips building releases
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Cache node_modules, build, extensions, and remote
        uses: ./.github/actions/cache-multi-paths

      - name: Setup Build Environment
        uses: ./.github/actions/setup-build-env

      - name: Setup E2E Test Environment
        uses: ./.github/actions/setup-e2e-env
        with:
          aws-role-to-assume: ${{ secrets.QA_AWS_RO_ROLE }}
          aws-region: ${{ secrets.QA_AWS_REGION }}

      - name: Install Positron License
        uses: ./.github/actions/install-license
        with:
          github-pat: ${{ secrets.POSITRON_GITHUB_PAT }}
          dev-license: ${{ secrets.POSITRON_DEV_LICENSE }}

      - name: Execute yarn
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
          ELECTRON_SKIP_BINARY_DOWNLOAD: 1
          POSITRON_GITHUB_PAT: ${{ github.token }}
        run: |
          corepack enable
          yarn global add node-gyp
          yarn --immutable --network-timeout 120000
          yarn --cwd test/automation install --frozen-lockfile
          yarn --cwd test/smoke install --frozen-lockfile

      - name: Download Compiled Artifacts
        uses: actions/download-artifact@v4
        with:
          name: compiled-app
          path: ./out/vs

      - name: Run Tests (Electron)
        env:
          POSITRON_PY_VER_SEL: 3.10.12
          POSITRON_R_VER_SEL: 4.4.0
        id: electron-smoke-tests
        run: DISPLAY=:10 yarn smoketest-all --tracing --parallel --jobs 2 --skip-cleanup

      - name: Convert XUnit to JUnit
        id: xunit-to-junit
        if: success() || failure()
        run: |
          sudo apt-get update
          sudo apt-get install -y libxml2-utils
          yarn xunit-to-junit smoke-tests-electron

      - name: Clean up license files
        if: always()
        run: |
          cd ..
          rm -rf positron-license

      - name: Publish Electron Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure()
        with:
          report_paths: "**/.build/logs/smoke-tests-electron/test-results/xunit-results.xml"
          check_name: "Electron Test Results"
          token: ${{ secrets.GITHUB_TOKEN }}

  e2e-browser-tests:
    runs-on: ubuntu-latest-4x
    timeout-minutes: 25
    needs: setup
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      POSITRON_BUILD_NUMBER: 0 # CI skips building releases
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Cache node_modules, build, extensions, and remote
        uses: ./.github/actions/cache-multi-paths

      - name: Setup Build Environment
        uses: ./.github/actions/setup-build-env

      - name: Setup E2E Test Environment
        uses: ./.github/actions/setup-e2e-env
        with:
          aws-role-to-assume: ${{ secrets.QA_AWS_RO_ROLE }}
          aws-region: ${{ secrets.QA_AWS_REGION }}

      - name: Install Positron License
        uses: ./.github/actions/install-license
        with:
            github-pat: ${{ secrets.POSITRON_GITHUB_PAT }}
            dev-license: ${{ secrets.POSITRON_DEV_LICENSE }}

      - name: Execute yarn
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
          ELECTRON_SKIP_BINARY_DOWNLOAD: 1
          POSITRON_GITHUB_PAT: ${{ github.token }}
        run: |
          corepack enable
          yarn global add node-gyp
          yarn --immutable --network-timeout 120000
          yarn --cwd test/automation install --frozen-lockfile
          yarn --cwd test/smoke install --frozen-lockfile

      - name: Download Compiled Artifacts
        uses: actions/download-artifact@v4
        with:
          name: compiled-app
          path: ./out/vs

      # - name: Run Web Smoke Tests
      #   env:
      #     POSITRON_PY_VER_SEL: 3.10.12
      #     POSITRON_R_VER_SEL: 4.4.0
      #   id: electron-web-smoke-tests
      #   run: DISPLAY=:10 yarn smoketest-web --tracing

      # - name: Convert XUnit to JUnit
      #   id: xunit-to-junit
      #   if: success() || failure()
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y libxml2-utils
      #     yarn xunit-to-junit smoke-tests-browser

      - name: Clean up license files
        if: always()
        run: |
          cd ..
          rm -rf positron-license

      # - name: Publish Web Test Report
      #   uses: mikepenz/action-junit-report@v4
      #   if: success() || failure()
      #   with:
      #     report_paths: "**/.build/logs/smoke-tests-browser/test-results/xunit-results.xml"
      #     check_name: "Web Test Results"
      #     token: ${{ secrets.GITHUB_TOKEN }}

      # - name: Set TestRail Run Title
      #   id: set-testrail-run-title
      #   if: always()
      #   run: echo "TESTRAIL_TITLE=$(date +'%Y-%m-%d') Nightly Smoke Tests - $GITHUB_REF_NAME" >> $GITHUB_ENV

      # - name: Upload Test Results to TestRail
      #   id: testrail-upload
      #   if: always()
      #   run: trcli --host "https://posit.testrail.io/" --project Positron --username testrailautomation@posit.co --key ${{ secrets.TESTRAIL_API_KEY}} parse_junit --file ".build/logs/smoke-tests-electron/test-results/results.xml" --case-matcher name --title "$TESTRAIL_TITLE" --close-run

      # - name: Upload run artifacts - electron
      #   if: always()
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: run-artifacts-electron
      #     path: .build/logs/smoke-tests-electron/

      # - name: Upload run artifacts - browser
      #   if: always()
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: run-artifacts-browser
      #     path: .build/logs/smoke-tests-browser/

  # slack-notification:
  #   name: "Send Slack notification"
  #   runs-on: ubuntu-latest
  #   needs: linux
  #   if: ${{ failure() && github.ref == 'refs/heads/main' }}
  #   steps:
  #     - name: "Send Slack notification"
  #       uses: testlabauto/action-test-results-to-slack@v0.0.6
  #       with:
  #         github_token: ${{ secrets.POSITRON_GITHUB_PAT }}
  #         slack_token: ${{ secrets.SMOKE_TESTS_SLACK_TOKEN }}
  #         slack_channel: C07FR1JNZNJ #positron-test-results channel
  #         suite_name: Positron Full Test Suite
