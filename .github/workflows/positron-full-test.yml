name: "Test: Full Suite (Ubuntu)"

# Run tests daily at 4am UTC (11p EST) on weekdays for now, or manually
on:
  schedule:
    - cron: "0 4 * * 1-5"
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      POSITRON_BUILD_NUMBER: 0 # CI skips building releases
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Cache node_modules, build, extensions, and remote
        uses: ./.github/actions/cache-multi-paths

      - name: Setup Build and Compile
        uses: ./.github/actions/setup-build-env

      - name: Run Unit Tests (Electron)
        id: electron-unit-tests
        run: DISPLAY=:10 ./scripts/test.sh

      - name: Run Unit Tests (node.js)
        id: nodejs-unit-tests
        run: yarn test-node

      - name: Run Unit Tests (Browser, Chromium)
        id: browser-unit-tests
        run: DISPLAY=:10 yarn test-browser-no-install --browser chromium

  integration-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      POSITRON_BUILD_NUMBER: 0 # CI skips building releases
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Cache node_modules, build, extensions, and remote
        uses: ./.github/actions/cache-multi-paths

      - name: Setup Build and Compile
        uses: ./.github/actions/setup-build-env

      - name: Install Positron License
        uses: ./.github/actions/install-license
        with:
          github-token: ${{ secrets.POSITRON_GITHUB_PAT }}
          license-key: ${{ secrets.POSITRON_DEV_LICENSE }}

      - name: Setup R
        uses: ./.github/actions/install-r
        with:
          version: "4.4.0"

      - name: Compile Integration Tests
        run: yarn --cwd test/integration/browser compile

      - name: Run Integration Tests (Electron)
        id: electron-integration-tests
        run: DISPLAY=:10 ./scripts/test-integration.sh

      - name: Run Integration Tests (Remote)
        if: ${{ job.status != 'cancelled' && (success() || failure()) }}
        id: electron-remote-integration-tests
        run: DISPLAY=:10 ./scripts/test-remote-integration.sh

      - name: Run Integration Tests (Browser, Chromium)
        if: ${{ job.status != 'cancelled' && (success() || failure()) }}
        id: browser-integration-tests
        run: DISPLAY=:10 ./scripts/test-web-integration.sh --browser chromium

      - name: Clean up license files
        if: always()
        run: cd .. && rm -rf positron-license

  e2e-electron-tests:
    runs-on: ubuntu-latest-8x
    timeout-minutes: 60
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      POSITRON_BUILD_NUMBER: 0 # CI skips building releases
      _R_CHECK_FUTURE_FILE_TIMESTAMPS_: false # this check can be flaky in the R pkg tests
      _R_CHECK_CRAN_INCOMING_: false
      _R_CHECK_SYSTEM_CLOCK_: false
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Cache node_modules, build, extensions, and remote
        uses: ./.github/actions/cache-multi-paths

      - name: Setup Build and Compile
        uses: ./.github/actions/setup-build-env

      - name: Setup E2E Test Environment
        uses: ./.github/actions/setup-test-env
        with:
          aws-role-to-assume: ${{ secrets.QA_AWS_RO_ROLE }}
          aws-region: ${{ secrets.QA_AWS_REGION }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Tests (Electron)
        env:
          POSITRON_PY_VER_SEL: 3.10.12
          POSITRON_R_VER_SEL: 4.4.0
          CURRENTS_PROJECT_ID: ZOs5z2
          CURRENTS_RECORD_KEY: ${{ secrets.CURRENTS_RECORD_KEY }}
          CURRENTS_CI_BUILD_ID: ${{ github.run_id }}-${{ github.run_attempt }}
          COMMIT_INFO_MESSAGE: ${{ github.event.head_commit.message }} # only works on push events
          PWTEST_BLOB_DO_NOT_REMOVE: 1
          CURRENTS_TAG: "electron"
        id: electron-tests
        run: DISPLAY=:10 npx playwright test --project e2e-electron --workers 2

      - name: Upload blob report
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: blob-report-electron
          path: blob-report
          retention-days: 14

      - name: Upload junit report
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: junit-report-electron
          path: test-results/junit.xml

      - name: Upload logs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: logs-electron
          path: test-logs

  e2e-browser-tests:
    runs-on: ubuntu-latest-8x
    timeout-minutes: 50
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      POSITRON_BUILD_NUMBER: 0 # CI skips building releases
      _R_CHECK_FUTURE_FILE_TIMESTAMPS_: false # this check can be flaky in the R pkg tests
      _R_CHECK_CRAN_INCOMING_: false
      _R_CHECK_SYSTEM_CLOCK_: false
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Cache node_modules, build, extensions, and remote
        uses: ./.github/actions/cache-multi-paths

      - name: Setup Build and Compile
        uses: ./.github/actions/setup-build-env

      - name: Install Positron License
        uses: ./.github/actions/install-license
        with:
          github-token: ${{ secrets.POSITRON_GITHUB_PAT }}
          license-key: ${{ secrets.POSITRON_DEV_LICENSE }}

      - name: Setup E2E Test Environment
        uses: ./.github/actions/setup-test-env
        with:
          aws-role-to-assume: ${{ secrets.QA_AWS_RO_ROLE }}
          aws-region: ${{ secrets.QA_AWS_REGION }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # Preloading ensures the Node.js binary is fully built and ready before
      # any parallel processes start, preventing runtime conflicts
      - name: Preload Node.js Binary
        run: yarn gulp node

      - name: Run Tests (Browser)
        env:
          POSITRON_PY_VER_SEL: 3.10.12
          POSITRON_R_VER_SEL: 4.4.0
          CURRENTS_PROJECT_ID: ZOs5z2
          CURRENTS_RECORD_KEY: ${{ secrets.CURRENTS_RECORD_KEY }}
          CURRENTS_CI_BUILD_ID: ${{ github.run_id }}-${{ github.run_attempt }}
          COMMIT_INFO_MESSAGE: ${{ github.event.head_commit.message }}
          PWTEST_BLOB_DO_NOT_REMOVE: 1
          CURRENTS_TAG: "chromium"
        id: browser-tests
        run: DISPLAY=:10 npx playwright test --project e2e-browser --workers 2

      - name: Upload blob report
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: blob-report-browser
          path: blob-report
          retention-days: 14

      - name: Upload logs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: logs-browser
          path: test-logs

      - name: Clean up license files
        if: always()
        run: cd .. && rm -rf positron-license

  e2e-report:
    if: always()
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.48.0-jammy
    needs: [e2e-electron-tests, e2e-browser-tests, unit-tests, integration-tests]
    env:
      REPORT_DIR: playwright-report-${{ github.run_id }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Run E2E Report
        uses: ./.github/actions/e2e-report
        if: always()
        with:
          aws-s3-bucket: positron-test-reports
          aws-role: ${{ secrets.AWS_TEST_REPORTS_ROLE }}
          testrail-api-key: ${{ secrets.TESTRAIL_API_KEY }}
          testrail-title: "E2E Electron Test Run"

      - name: Send Slack Notification
        uses: midleman/slack-workflow-status@master
        if: always()
        with:
          repo_token: ${{ secrets.POSITRON_GITHUB_PAT }}
          slack_webhook_url: ${{ secrets.SLACK_TEST_RESULTS_WEBHOOK_URL }}
          notify_on: "failure"
