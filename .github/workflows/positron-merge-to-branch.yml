name: "Test: Merge to branch"

on:
  push:
    branches:
      - main
      - 'prerelease/**'
  workflow_call:
    inputs:
      e2e_grep:
        required: false
        description: "Grep filter to apply to the e2e tests: @pr, @win, etc."
        default: ""
        type: string
  workflow_dispatch:
    inputs:
      e2e_grep:
        required: false
        description: "Grep filter to apply to the e2e tests: @pr, @win, etc."
        default: ""
        type: string

env:
  E2E_GREP: ${{ inputs.e2e_grep || '' }}

permissions:
  id-token: write
  contents: read

jobs:
  e2e-electron:
    timeout-minutes: 45
    runs-on: ubuntu-latest-8x
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      POSITRON_BUILD_NUMBER: 0 # CI skips building releases
      _R_CHECK_FUTURE_FILE_TIMESTAMPS_: false # this check can be flaky in the R pkg tests
      _R_CHECK_CRAN_INCOMING_: false
      _R_CHECK_SYSTEM_CLOCK_: false
      AWS_S3_BUCKET: positron-test-reports
      REPORT_DIR: playwright-report-${{ github.run_id }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Cache node_modules, build, extensions, and remote
        uses: ./.github/actions/cache-multi-paths

      - name: Setup Build and Compile
        uses: ./.github/actions/setup-build-env

      - name: Setup E2E Test Environment
        uses: ./.github/actions/setup-test-env
        with:
          aws-role-to-assume: ${{ secrets.QA_AWS_RO_ROLE }}
          aws-region: ${{ secrets.QA_AWS_REGION }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Send HTML report URL to GitHub Summary
        if: ${{ !cancelled() }}
        run: |
          REPORT_URL="https://d38p2avprg8il3.cloudfront.net/${{ env.REPORT_DIR }}/index.html"
          echo "Report URL: $REPORT_URL"
          echo "ðŸ“„ [Playwright Report]($REPORT_URL) <br>" > $GITHUB_STEP_SUMMARY

      - name: Run Playwright Tests (Electron)
        env:
          POSITRON_PY_VER_SEL: 3.10.12
          POSITRON_R_VER_SEL: 4.4.0
          CURRENTS_RECORD_KEY: ${{ secrets.CURRENTS_RECORD_KEY }}
          CURRENTS_CI_BUILD_ID: ${{ github.run_id }}-${{ github.run_attempt }}
          COMMIT_INFO_MESSAGE: ${{ github.event.head_commit.message }}
          PWTEST_BLOB_DO_NOT_REMOVE: 1
          CURRENTS_TAG: "electron,${{ inputs.e2e_grep }}"
        id: e2e-playwright-tests
        run: DISPLAY=:10 npx playwright test --project e2e-electron --workers 2 --grep=${{ env.E2E_GREP }}

      - name: Upload Playwright Report to S3
        if: ${{ success() || failure() }}
        uses: ./.github/actions/upload-report-to-s3
        with:
          role-to-assume: ${{ secrets.AWS_TEST_REPORTS_ROLE }}

  unit-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      POSITRON_BUILD_NUMBER: 0 # CI skips building releases
      _R_CHECK_FUTURE_FILE_TIMESTAMPS_: false # this check can be flaky in the R pkg tests
      _R_CHECK_CRAN_INCOMING_: false
      _R_CHECK_SYSTEM_CLOCK_: false
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Cache node_modules, build, extensions, and remote
        uses: ./.github/actions/cache-multi-paths

      - name: Setup Build and Compile
        uses: ./.github/actions/setup-build-env

      - name: Install Positron License
        uses: ./.github/actions/install-license
        with:
          github-token: ${{ secrets.POSITRON_GITHUB_PAT }}
          license-key: ${{ secrets.POSITRON_DEV_LICENSE }}

      # one unit test needs this: Can list tables and fields from R connections
      - name: Setup R
        uses: ./.github/actions/install-r
        with:
          version: "4.4.0"

      - name: Run Unit Tests (Electron)
        id: electron-unit-tests
        run: DISPLAY=:10 ./scripts/test.sh

      - name: Run Unit Tests (node.js)
        id: nodejs-unit-tests
        run: yarn test-node

      - name: Run Unit Tests (Browser, Chromium)
        id: browser-unit-tests
        run: DISPLAY=:10 yarn test-browser-no-install --browser chromium

  integration-tests:
      runs-on: ubuntu-latest-4x
      timeout-minutes: 20
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        POSITRON_BUILD_NUMBER: 0 # CI skips building releases
        _R_CHECK_FUTURE_FILE_TIMESTAMPS_: false # this check can be flaky in the R pkg tests
        _R_CHECK_CRAN_INCOMING_: false
        _R_CHECK_SYSTEM_CLOCK_: false
      steps:
        - uses: actions/checkout@v4

        - uses: actions/setup-node@v4
          with:
            node-version-file: .nvmrc

        - name: Cache node_modules, build, extensions, and remote
          uses: ./.github/actions/cache-multi-paths

        - name: Setup Build and Compile
          uses: ./.github/actions/setup-build-env

        - name: Install Positron License
          uses: ./.github/actions/install-license
          with:
            github-token: ${{ secrets.POSITRON_GITHUB_PAT }}
            license-key: ${{ secrets.POSITRON_DEV_LICENSE }}

        # one integration test needs this: Connections pane works for R
        - name: Setup R
          uses: ./.github/actions/install-r
          with:
            version: "4.4.0"

        - name: Compile Integration Tests
          run: yarn --cwd test/integration/browser compile

        - name: Run Integration Tests (Electron)
          id: electron-integration-tests
          run: DISPLAY=:10 ./scripts/test-integration-pr.sh

        - name: Run Integration Tests (Remote)
          if: ${{ job.status != 'cancelled' && (success() || failure()) }}
          id: electron-remote-integration-tests
          run: DISPLAY=:10 ./scripts/test-remote-integration.sh

        - name: Run Integration Tests (Browser, Chromium)
          if: ${{ job.status != 'cancelled' && (success() || failure()) }}
          id: browser-integration-tests
          run: DISPLAY=:10 ./scripts/test-web-integration.sh --browser chromium

  slack-notify:
    # if: ${{ failure() && inputs.e2e_grep == '' }}
    if: ${{ inputs.e2e_grep == '' }}
    needs: [unit-tests, integration-tests, e2e-electron]
    runs-on: ubuntu-latest
    steps:
      - name: Send Slack Notification
        uses: midleman/slack-workflow-status@master
        with:
          repo_token: ${{ secrets.POSITRON_GITHUB_PAT }}
          slack_webhook_url: ${{ secrets.SLACK_TEST_RESULTS_WEBHOOK_URL }}
          notify_on: "failure"
      # adding this for time being so i can monitor slack notifications to make sure
      # behavior is as expected.
      - name: Send Slack Notification
        uses: midleman/slack-workflow-status@master
        with:
          repo_token: ${{ secrets.POSITRON_GITHUB_PAT }}
          slack_webhook_url: ${{ secrets.SLACK_MARIE_WEBHOOK_URL }}


